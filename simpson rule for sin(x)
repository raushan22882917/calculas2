{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP6/QWbSbpdPOnuuLmd2wtz",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/raushan22882917/calculas2/blob/main/simpson%20rule%20for%20sin(x)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "8PfcftH-RGIa",
        "outputId": "b1b0cf63-545a-4b74-9c6c-373f2b6a57c6"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def simpsons_rule(f, a, b, n):\n",
        "    \"\"\"\n",
        "    Approximates the definite integral of f from a to b using Simpson's Rule with n subintervals.\n",
        "    \"\"\"\n",
        "    h = (b - a) / n\n",
        "    x = np.linspace(a, b, n+1)\n",
        "    y = f(x)\n",
        "    integral = h / 3 * (y[0] + y[-1] + 4*np.sum(y[1:-1:2]) + 2*np.sum(y[2:-1:2]))\n",
        "    return integral\n",
        "\n",
        "# Define a function to integrate\n",
        "def f(x):\n",
        "    return np.sin(x)\n",
        "\n",
        "# Set the integration bounds and number of subintervals\n",
        "a = 0\n",
        "b = np.pi\n",
        "n_values = np.arange(2, 101, 2)\n",
        "\n",
        "# Compute the exact value of the integral (for comparison)\n",
        "exact_value = 2\n",
        "\n",
        "# Compute the approximations using Simpson's Rule and record the errors\n",
        "errors = []\n",
        "for n in n_values:\n",
        "    approx_value = simpsons_rule(f, a, b, n)\n",
        "    errors.append(abs(approx_value - exact_value))\n",
        "\n",
        "# Plot the errors as a function of the number of subintervals\n",
        "plt.plot(n_values, errors)\n",
        "plt.xlabel('Number of subintervals')\n",
        "plt.ylabel('Absolute error')\n",
        "plt.show()\n"
      ]
    }
  ]
}